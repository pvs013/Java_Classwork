#BlueJ class context
comment0.params=list
comment0.target=ArrayMethods(java.lang.String[])
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ ArrayMethods\n
comment1.params=
comment1.target=boolean\ isSorted()
comment1.text=\n\ Determines\ if\ the\ array\ is\ sorted\ (do\ not\ sort)\n\ When\ Strings\ are\ sorted,\ they\ are\ in\ alphabetical\ order\n\ Use\ the\ compareTo\ method\ to\ determine\ which\ string\ comes\ first\n\ You\ can\ look\ at\ the\ String\ compareTo\ method\ in\ the\ Java\ API\n\ @return\ true\ if\ the\ array\ \ is\ sorted\ else\ false.\n
comment2.params=
comment2.target=void\ replaceWithLargerNeighbor()
comment2.text=\n\ Replaces\ all\ but\ the\ first\ and\ last\ with\ the\ larger\ of\ its\ to\ neighbors\n\ You\ can\ use\ the\ compareTo\ to\ determine\ which\ string\ is\ larger\ (later\ in\ alphabetical\n\ order.\n\ @return\ a\ string\ representation\ of\ the\ array\ list.\ (do\ this\ with\ list.toString()\n
comment3.params=
comment3.target=int\ countDuplicates()
comment3.text=\n\ Gets\ the\ number\ of\ duplicates\ in\ the\ list.\n\ (Be\ careful\ to\ only\ count\ each\ duplicate\ once.\ Start\ at\ index\ 0.\ Does\ it\ match\ any\ of\ the\ other\ element?\n\ Get\ the\ next\ word.\ It\ is\ at\ index\ i.\ Does\ it\ match\ any\ of\ the\ words\ with\ index\ >\ i?)\n\ @return\ the\ number\ of\ duplicate\ words\ in\ the\ list\n
comment4.params=
comment4.target=void\ xyzToBack()
comment4.text=\n\ Moves\ any\ word\ that\ startw\ with\ x,\ y,\ or\ z\ to\ the\ front\ of\ the\ arraylist,\ but\n\ otherwise\ prserves\ the\ order\n
comment5.params=
comment5.target=void\ xyzToFront()
comment5.text=\n\ Moves\ any\ word\ that\ startw\ with\ x,\ y,\ or\ z\ to\ the\ front\ of\ the\ arraylist,\ but\n\ otherwise\ prserves\ the\ order\n
comment6.params=index_from\ index_to
comment6.target=void\ move(int,\ int)
comment6.text=\n\ Moves\ a\ value\ within\ the\ array\n\ @param\ index_from\ moving\ from\ index\ position\n\ @param\ index_to\ moving\ to\ index\ position\n
comment7.params=index1\ index2
comment7.target=void\ swap(int,\ int)
comment7.text=\n\ Swaps\ the\ values\ from\ two\ index\ positions\n\ @param\ index1\ 1st\ index\ position\n\ @param\ index2\ 2nd\ index\ position\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\n\ gets\ the\ string\ representati\ of\ tis\ array\ list\n\ @returns\ the\ string\ representat-ion\ of\ thiarray\ list\ in\n\ standard\ collectiuon\ format\n
numComments=9
